#!/bin/bash

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

ctrl_c(){
	echo -e "\n\n${redColour}[!] Aborting update...${endColour}\n"
	tput cnorm; exit 1
}

# Ctrl+C
trap ctrl_c INT

path="$(find ~ -type d -name kromaTool)"

updateTools(){
	tput civis
	echo -e "\n${greenColour}[+]${endColour} ${grayColour}Checking for pending updates...${endColour}\n"

	cd "$path"
	git pull origin main > checker.txt 2>/dev/null

	checker="$(grep "Updating" checker.txt)"

	if [ "$checker" ]; then
		sudo cp -rf $path /usr/bin/ || echo -e "${redColour}[!] Error: Unable to copy${endColour} ${yellowColour}$path${endColour} ${redColour}to${endColour} ${yellowColour}/usr/bin/${endColour}\n${yellowColour}[!] Please use this tool with root user${endColour}\n"; return 1;
	else
		echo -e "${greenColour}[+]${endColour} ${grayColour}$(cat checker.txt)${endColour}\n"
	fi
	rm checker.txt
	tput cnorm
}

if [ "$path" ]; then
	updateTools
else
	cd ~ && updateTools
fi
